"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[352],{6131:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>t,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=n(4848),l=n(8453);const r={title:"Image"},a=void 0,o={id:"image",title:"Image",description:"Image is a field in the DALEC spec that allows you to customize certain aspects",source:"@site/docs/image.md",sourceDirName:".",slug:"/image",permalink:"/dalec/image",draft:!1,unlisted:!1,editUrl:"https://github.com/Azure/dalec/blob/main/website/docs/image.md",tags:[],version:"current",frontMatter:{title:"Image"}},t={},d=[{value:"Base",id:"base",level:3},{value:"Bases",id:"bases",level:3},{value:"Post",id:"post",level:3},{value:"Labels",id:"labels",level:3},{value:"Env",id:"env",level:3},{value:"Entrypoint",id:"entrypoint",level:3},{value:"Cmd",id:"cmd",level:3},{value:"Workdir",id:"workdir",level:3},{value:"User",id:"user",level:3},{value:"Stop Signal",id:"stop-signal",level:3},{value:"Volumes",id:"volumes",level:3}];function c(e){const s={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:"Image is a field in the DALEC spec that allows you to customize certain aspects\nof the produced image. The image field is an object with the following properties:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"base"}),": The image ref to use as the base for the output container. [Deprecated: use ",(0,i.jsx)(s.code,{children:"bases"})," instead] ",(0,i.jsx)(s.a,{href:"#base",children:"base section"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"bases"}),": The list of base images to use as the base for the output container(s). ",(0,i.jsx)(s.a,{href:"#bases",children:"bases section"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"post"}),": The post processing for the image, such as symlinks. ",(0,i.jsx)(s.a,{href:"#post",children:"post section"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"labels"}),": The labels for the image. This is an optional field. ",(0,i.jsx)(s.a,{href:"#labels",children:"labels section"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"env"}),": The environment variables for the image. This is an optional field. ",(0,i.jsx)(s.a,{href:"#env",children:"env section"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"entrypoint"}),": The entrypoint for the image. This is an optional field. ",(0,i.jsx)(s.a,{href:"#entrypoint",children:"entrypoint section"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"cmd"}),": The command for the image. This is an optional field. ",(0,i.jsx)(s.a,{href:"#cmd",children:"cmd section"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"workdir"}),": The working directory for the image. This is an optional field. ",(0,i.jsx)(s.a,{href:"#workdir",children:"workdir section"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"user"}),": The user for the image. This is an optional field. ",(0,i.jsx)(s.a,{href:"#user",children:"user section"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"stop_signal"}),": The stop signal for the image. This is an optional field. ",(0,i.jsx)(s.a,{href:"#stop-signal",children:"stop signal section"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"volumes"}),": The volumes for the image. This is an optional field. ",(0,i.jsx)(s.a,{href:"#volumes",children:"volumes section"})]}),"\n"]}),"\n",(0,i.jsxs)(s.admonition,{type:"note",children:[(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"base"})," field is deprecated. Use the ",(0,i.jsx)(s.code,{children:"bases"})," field instead."]}),(0,i.jsxs)(s.p,{children:["For ",(0,i.jsx)(s.code,{children:"bases"}),", the requested build target may not support multiple base images.\nIn this cases the target will produce an error."]}),(0,i.jsxs)(s.p,{children:["Currently only ",(0,i.jsx)(s.code,{children:"windowscross/container"})," supports multiple base images for the\npurpose of building for multiple windows versions.\nIf multiple bases are provided with the same ",(0,i.jsx)(s.code,{children:"os.version"})," value in the image\nplatform, this may produce an error or at least unexpected results since images\nare keyed on the image platform metadata."]})]}),"\n",(0,i.jsxs)(s.p,{children:["With the exception of ",(0,i.jsx)(s.code,{children:"base"}),", ",(0,i.jsx)(s.code,{children:"bases"}),", and ",(0,i.jsx)(s.code,{children:"post"}),", these fields are all used to\nmerge with the configured (or default) base image(s)."]}),"\n",(0,i.jsx)(s.h3,{id:"base",children:"Base"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"base"})," field is used to specify the base image for the output container."]}),"\n",(0,i.jsx)(s.p,{children:"Example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  base: mcr.microsoft.com/cbl-mariner/distroless/minimal:2.0\n"})}),"\n",(0,i.jsx)(s.h3,{id:"bases",children:"Bases"}),"\n",(0,i.jsxs)(s.p,{children:["As noted above, the ",(0,i.jsx)(s.code,{children:"bases"})," field is used to specify the base image(s) for the\noutput container(s).\nMultiple bases can be specified for the same target, but the target must support\nit.\nCurrently the only built-in target that supports this is ",(0,i.jsx)(s.code,{children:"windowscross/container"}),"\nwhere each base image specified is used to build for a different Windows version."]}),"\n",(0,i.jsx)(s.p,{children:"Example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  bases:\n    - rootfs:\n        image:\n          ref: mcr.microsoft.com/windows/nanoserver:1809\n    - rootfs:\n        image:\n          ref: mcr.microsoft.com/windows/nanoserver:ltsc2025\n    - rootfs:\n        image:\n          ref: mcr.microsoft.com/windows/nanoserver:ltsc2022\n"})}),"\n",(0,i.jsxs)(s.p,{children:["The data type allows specifying any kind of ",(0,i.jsx)(s.a,{href:"/dalec/sources",children:"source"})," for the base image,\nhowever currently only the ",(0,i.jsx)(s.code,{children:"image"})," source is supported. Anything else will produce\nan error.\nSupport for other source types may be added in the future."]}),"\n",(0,i.jsx)(s.h3,{id:"post",children:"Post"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"post"})," field is used to specify post processing for the image."]}),"\n",(0,i.jsx)(s.p,{children:"The following fields are supported:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"symlinks"}),": A list of symlinks to create in the image."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  post:\n    symlinks:\n      /usr/bin/my-binary: # Where the symlink points to\n        paths: # a list of symlinks that will point to /usr/bin/my-binary\n         - /my-binary\n"})}),"\n",(0,i.jsx)(s.h3,{id:"labels",children:"Labels"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"labels"})," field is used to specify labels for the image."]}),"\n",(0,i.jsx)(s.p,{children:"Example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  labels:\n    com.example.label: example\n"})}),"\n",(0,i.jsx)(s.h3,{id:"env",children:"Env"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"env"})," field is used to specify environment variables for the image."]}),"\n",(0,i.jsx)(s.p,{children:"Example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  env:\n    - MY_ENV_VAR=my-value\n"})}),"\n",(0,i.jsx)(s.h3,{id:"entrypoint",children:"Entrypoint"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"entrypoint"})," field is used to specify the entrypoint for the image."]}),"\n",(0,i.jsx)(s.p,{children:"Example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  entrypoint: /usr/bin/my-binary\n"})}),"\n",(0,i.jsx)(s.h3,{id:"cmd",children:"Cmd"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"cmd"})," field is used to specify the command for the image."]}),"\n",(0,i.jsx)(s.p,{children:"Example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  cmd: /usr/bin/my-binary\n"})}),"\n",(0,i.jsx)(s.h3,{id:"workdir",children:"Workdir"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"workdir"})," field is used to specify the working directory for the image."]}),"\n",(0,i.jsx)(s.p,{children:"Example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  workdir: /my-dir\n"})}),"\n",(0,i.jsx)(s.h3,{id:"user",children:"User"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"user"})," field is used to specify the user for the image."]}),"\n",(0,i.jsx)(s.p,{children:"Example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  user: my-user:my-group\n"})}),"\n",(0,i.jsx)(s.p,{children:"Alternatively"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  user: my-user\n"})}),"\n",(0,i.jsx)(s.p,{children:"You may also use uid/gid values:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  user: 1000:1000\n"})}),"\n",(0,i.jsx)(s.p,{children:"Or just user:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  user: 1000\n"})}),"\n",(0,i.jsx)(s.p,{children:"User and group names are not automatically created for you, so it must be in\nthe base OS to a username to work."}),"\n",(0,i.jsx)(s.h3,{id:"stop-signal",children:"Stop Signal"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"stop_signal"})," field is used to specify the stop signal for the image.\nThis is used by the container runtime to know what signal to use to gracefully\nstop the container."]}),"\n",(0,i.jsx)(s.p,{children:"Example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  stop_signal: SIGINT\n"})}),"\n",(0,i.jsx)(s.h3,{id:"volumes",children:"Volumes"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"volumes"})," field is used to specify volumes for the image."]}),"\n",(0,i.jsx)(s.p,{children:"Example:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"image:\n  volumes:\n    /some-path: {}\n"})}),"\n",(0,i.jsx)(s.p,{children:"This is always a map of the path to create the volume at and an empty object."})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>o});var i=n(6540);const l={},r=i.createContext(l);function a(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);