"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[71],{9730:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>o});var a=i(4848),t=i(8453);const s={title:"Building from source"},d=void 0,c={id:"build-source",title:"Building from source",description:"In this section, we'll go over how to build packages from source with Dalec.",source:"@site/docs/build-source.md",sourceDirName:".",slug:"/build-source",permalink:"/dalec/build-source",draft:!1,unlisted:!1,editUrl:"https://github.com/Azure/dalec/blob/main/website/docs/build-source.md",tags:[],version:"current",frontMatter:{title:"Building from source"},sidebar:"sidebar",previous:{title:"Building with Dalec",permalink:"/dalec/build"},next:{title:"Virtual Packages",permalink:"/dalec/virtual-packages"}},l={},o=[{value:"Building using Docker",id:"building-using-docker",level:2},{value:"Building an RPM package",id:"building-an-rpm-package",level:3},{value:"Building a container",id:"building-a-container",level:3}];function r(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"In this section, we'll go over how to build packages from source with Dalec."}),"\n",(0,a.jsx)(n.p,{children:"To do this, we'll need a few things:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"A list of sources to pull from"}),"\n",(0,a.jsx)(n.li,{children:"A build script to build the sources"}),"\n",(0,a.jsx)(n.li,{children:"A list of artifacts to include in the package"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["In this example, we'll build the ",(0,a.jsx)(n.code,{children:"go-md2man"})," package and container from ",(0,a.jsx)(n.a,{href:"https://github.com/cpuguy83/go-md2man",children:(0,a.jsx)(n.code,{children:"go-md2man"})})," repo using ",(0,a.jsx)(n.code,{children:"v2.0.3"})," tag in the repo."]}),"\n",(0,a.jsxs)(n.p,{children:["First, let's start with the contructing a ",(0,a.jsx)(n.a,{href:"/dalec/spec",children:"Dalec spec"})," file."]}),"\n",(0,a.jsx)(n.p,{children:"We define the metadata of the package in the spec. This includes the name, packager, vendor, license, website, and description of the package."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'# syntax=ghcr.io/azure/dalec/frontend:latest\nname: go-md2man\nversion: 2.0.3\nrevision: "1"\nlicense: MIT\ndescription: A tool to convert markdown into man pages (roff).\npackager: Dalec Example\nvendor: Dalec Example\nwebsite: https://github.com/cpuguy83/go-md2man\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["In metadata section, ",(0,a.jsx)(n.code,{children:"packager"}),", ",(0,a.jsx)(n.code,{children:"vendor"})," and ",(0,a.jsx)(n.code,{children:"website"})," are optional fields."]})}),"\n",(0,a.jsx)(n.p,{children:"In the next section, we define the sources that we will be pulling from. In this case, we are pulling from a git repository."}),"\n",(0,a.jsxs)(n.p,{children:["One thing to note, in many build systems you will not have access to the Internet while building the package, and indeed that is the case with the ",(0,a.jsx)(n.code,{children:"mariner2"})," target. As such, this build will fail because ",(0,a.jsx)(n.code,{children:"go build"})," will try to download the go modules. For this reason, we added a ",(0,a.jsx)(n.code,{children:"generate"})," section to the source to run ",(0,a.jsx)(n.code,{children:"go mod download"})," in a docker image with the ",(0,a.jsx)(n.code,{children:"src"})," source mounted and then extract the go modules from the resulting filesystem."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'sources:\n  src:\n    git:\n      url: https://github.com/cpuguy83/go-md2man.git\n      commit: "v2.0.3"\n    generate:\n      - gomod: {}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["In the next section, we define the dependencies that are needed to build the package. In this case, we need the ",(0,a.jsx)(n.code,{children:"golang"})," dependency at the build time, and ",(0,a.jsx)(n.code,{children:"openssl-libs"})," at runtime. Build dependencies are dependencies that are needed to build the package, while runtime dependencies are dependencies that are needed to run the package."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"dependencies:\n  build:\n    golang:\n  runtime:\n    openssl-libs:\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"Runtime dependencies are not required for this specific example, but they are included for illustrative purposes."})}),"\n",(0,a.jsxs)(n.p,{children:["Now, let's define the build steps. In this case, we are building the ",(0,a.jsx)(n.code,{children:"go-md2man"})," binary."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'build:\n  env:\n    CGO_ENABLED: "0"\n  steps:\n    - command: |\n        cd src\n        go build -o go-md2man .\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Next, we define the artifacts that we want to include in the package. In this case, we are including the ",(0,a.jsx)(n.code,{children:"go-md2man"})," binary."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"artifacts:\n  binaries:\n    src/go-md2man:\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Image section defines the entrypoint and command for the image. In this case, we are setting the entrypoint to ",(0,a.jsx)(n.code,{children:"go-md2man"})," and the command to ",(0,a.jsx)(n.code,{children:"--help"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"image:\n  entrypoint: go-md2man\n  cmd: --help\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Finally, we can add a test case to the spec file which helps ensure the package is assembled as expected. The following test will make sure ",(0,a.jsx)(n.code,{children:"/usr/bin/go-md2man"})," is installed and has the expected permissions. These tests are automatically executed when building the container image."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"tests:\n  - name: Check file permissions\n    files:\n      /usr/bin/go-md2man:\n        permissions: 0755\n"})}),"\n",(0,a.jsx)(n.p,{children:"Now, let's put it all together in a single file."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'# syntax=ghcr.io/azure/dalec/frontend:latest\nname: go-md2man\nversion: 2.0.3\nrevision: "1"\npackager: Dalec Example\nvendor: Dalec Example\nlicense: MIT\ndescription: A tool to convert markdown into man pages (roff).\nwebsite: https://github.com/cpuguy83/go-md2man\n\nsources:\n  src:\n    generate:\n      - gomod: {}\n    git:\n      url: https://github.com/cpuguy83/go-md2man.git\n      commit: "v2.0.3"\n\ndependencies:\n  build:\n    golang:\n\nbuild:\n  env:\n    CGO_ENABLED: "0"\n  steps:\n    - command: |\n        cd src\n        go build -o go-md2man .\n\nartifacts:\n  binaries:\n    src/go-md2man:\n\nimage:\n  entrypoint: go-md2man\n  cmd: --help\n\ntests:\n  - name: Check bin\n    files:\n      /usr/bin/go-md2man:\n        permissions: 0755\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["Full example can be found at ",(0,a.jsx)(n.a,{href:"https://github.com/Azure/dalec/blob/main/docs/examples/go-md2man.yml",children:"docs/examples/go-md2man.yml"})]})}),"\n",(0,a.jsxs)(n.p,{children:["Now that we have a spec file, we can build the package and container using ",(0,a.jsx)(n.code,{children:"docker"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"building-using-docker",children:"Building using Docker"}),"\n",(0,a.jsxs)(n.p,{children:["In this section, we'll go over how to build packages and containers with Dalec. Other applicable Docker commands (such as ",(0,a.jsx)(n.code,{children:"--push"})," and others) will also apply to Dalec."]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"mariner2"})," target here is an example. You can find more information about available targets in the ",(0,a.jsx)(n.a,{href:"/dalec/targets",children:"targets"})," section."]})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"These steps are independent of each other. You don't have to build an RPM first to build a container."})}),"\n",(0,a.jsx)(n.h3,{id:"building-an-rpm-package",children:"Building an RPM package"}),"\n",(0,a.jsx)(n.p,{children:"To build an RPM package only, we can use the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"docker build -t go-md2man:2.0.3 -f docs/examples/go-md2man.yml --target=mariner2/rpm --output=_output .\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This will create ",(0,a.jsx)(n.code,{children:"RPM"})," and ",(0,a.jsx)(n.code,{children:"SRPM"})," directories in the ",(0,a.jsx)(n.code,{children:"_output"})," directory with the built RPM and SRPM packages respectively."]}),"\n",(0,a.jsx)(n.h3,{id:"building-a-container",children:"Building a container"}),"\n",(0,a.jsx)(n.p,{children:"To build a container, we can use the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"docker build -t go-md2man:2.0.3 -f docs/examples/go-md2man.yml --target=mariner2 .\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This will produce a container image named ",(0,a.jsx)(n.code,{children:"go-md2man:2.0.3"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>c});var a=i(6540);const t={},s=a.createContext(t);function d(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);