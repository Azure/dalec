"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[802],{8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}},9937:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"editor-support","title":"Editor Support","description":"We provide a JSON schema file to integrate with your editor.","source":"@site/docs/editor-support.md","sourceDirName":".","slug":"/editor-support","permalink":"/dalec/editor-support","draft":false,"unlisted":false,"editUrl":"https://github.com/Azure/dalec/blob/main/website/docs/editor-support.md","tags":[],"version":"current","frontMatter":{"title":"Editor Support"},"sidebar":"sidebar","previous":{"title":"Signing Packages","permalink":"/dalec/signing"}}');var i=t(4848),r=t(8453);const l={title:"Editor Support"},o=void 0,a={},c=[{value:"VSCode",id:"vscode",level:2},{value:"Vim",id:"vim",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["We provide a ",(0,i.jsx)(n.a,{href:"https://github.com/Azure/dalec/blob/main/docs/spec.schema.json",children:"JSON schema file"})," to integrate with your editor.\nThis will help validate your yaml files and provide intellisense for the spec."]}),"\n",(0,i.jsx)(n.h2,{id:"vscode",children:"VSCode"}),"\n",(0,i.jsxs)(n.p,{children:["For VSCode you'll need to use a YAML plugin that supports JSON schemas, such as ",(0,i.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml",children:"YAML Support by Red Hat"}),".\nFollow the plugins instructions to add the schema to your workspace.\nHere are some examples of vscode workspace configs ",(0,i.jsx)(n.code,{children:"settings.json"})," enabling the JSON schema:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Schema is locally available and enable it for yml files under a single directory."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "yaml.schemas": {\n       "docs/spec.schema.json": "test/fixtures/*.yml"\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Schema is locally available and enable it for yml files under multiple directories."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "yaml.schemas": {\n       "docs/spec.schema.json": [\n            "test/fixtures/*.yml",\n            "docs/**/*.yml"\n        ]\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Directly reference schema from GitHub repository URL."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "yaml.schemas": {\n        "https://raw.githubusercontent.com/Azure/dalec/<version>/docs/spec.schema.json" : "test/fixtures/*.yml"\n    }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"You may find with this extension that null-able yaml objects will show as errors in the editor unless you specify the empty value. An example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"args:\n    FOO:\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In this example the json schema says that ",(0,i.jsx)(n.code,{children:"FOO"})," should be a string but we've left it null which is perfectly valid yaml and will unmarshal to an empty string.\nThe yaml plugin will complain that it is an incorrect type. To fix this you can specify the empty string as the value:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'args:\n    FOO: ""\n'})}),"\n",(0,i.jsx)(n.h2,{id:"vim",children:"Vim"}),"\n",(0,i.jsx)(n.p,{children:"For vim there are 2 required vim plugins to add to your vimrc, though you may\nfind your own equivalents. The example below uses vim-plug to manage the plugins.\nThe first two listed below are required, the second two are recommended."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Plug 'prabirshrestha/vim-lsp'\nPlug 'mattn/vim-lsp-settings'\nPlug 'prabirshrestha/asyncomplete.vim'\nPlug 'prabirshrestha/asyncomplete-lsp.vim'\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"mattn/vim-lsp-settings"})," is a generic plugin for installing and managing\nLSP servers on your system.\nSee the ",(0,i.jsx)(n.a,{href:"https://github.com/mattn/vim-lsp-settings",children:"github"})," repo for more details\nas well as links to the other mentioned plugins."]}),"\n",(0,i.jsx)(n.p,{children:"After the plugins are installed, while editing a yaml file you need to run the\nfollowing vim command to install the correct LSP, this only needs to be done one\ntime:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:":LspInstallServer\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Finally, in your project dir you can add a file ",(0,i.jsx)(n.code,{children:".vim-lsp-settings/settings.json"}),"\nwhere we'll put the yaml LSP config for the particular project. Here is an example\nsimilar to the vscode example above:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n\t"yaml-language-server": {\n\t\t"schemas": [\n\t\t\t{\n\t\t\t\t"fileMatch": ["test/fixtures/*.yml"],\n\t\t\t\t"url": "https://raw.githubusercontent.com/Azure/dalec/<version>/docs/spec.schema.json"\n\t\t\t}\n\t\t],\n\t\t"completion": true,\n\t\t"validate": true\n\t}\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:'"fileMatch"'})," section you can add the file patterns to associate the schema\nwith.\nIn this case,  ",(0,i.jsx)(n.code,{children:"<version>"}),"  should be replaced with the specific Dalec frontend\nversion  (i.e., ",(0,i.jsx)(n.code,{children:"v0.6.1"}),") that is referenced in any files which match the\n",(0,i.jsx)(n.code,{children:"fileMatch"})," pattern. To pick up whatever the latest schema is, released or not,\nuse ",(0,i.jsx)(n.code,{children:"main"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"One or more of the above plugins depend on node.js and is known to work with\nnode >= 16.20 but may work with earlier releases."})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);