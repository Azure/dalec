"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[770],{8977:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var t=i(4848),s=i(8453);const o={},a="Signing Packages",c={id:"signing",title:"Signing Packages",description:"Packages can be automatically signed using Dalec. To do this, you will",source:"@site/docs/signing.md",sourceDirName:".",slug:"/signing",permalink:"/dalec/signing",draft:!1,unlisted:!1,editUrl:"https://github.com/Azure/dalec/blob/main/website/docs/docs/signing.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Testing",permalink:"/dalec/testing"}},r={},l=[];function d(e){const n={code:"code",em:"em",h1:"h1",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"signing-packages",children:"Signing Packages"}),"\n",(0,t.jsxs)(n.p,{children:["Packages can be automatically signed using Dalec. To do this, you will\nneed to provide a signing frontend. There is an example in the test\ncode ",(0,t.jsx)(n.code,{children:"test/signer/main.go"}),". Once that signing image has been built and\ntagged, the following can be added to the spec to trigger the signing\noperation:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'targets: # Distro specific build requirements\n  mariner2:\n    package_config:\n      signer:\n        image: "ref/to/signing:image"\n        cmdline: "/signer"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["This will send the artifacts (",(0,t.jsx)(n.code,{children:".rpm"}),", ",(0,t.jsx)(n.code,{children:".deb"}),", or ",(0,t.jsx)(n.code,{children:".exe"}),") to the\nsigning frontend as the build context."]}),"\n",(0,t.jsx)(n.p,{children:"The contract between dalec and the signing image is:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"The signing image will contain both the signing frontend, and any\nadditional tooling necessary to carry out the signing operation."}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"llb.State"})," corresponding the artifacts to be signed will be\nprovided as the build context."]}),"\n",(0,t.jsxs)(n.li,{children:["Dalec will provide the value of ",(0,t.jsx)(n.code,{children:"dalec.target"})," to the frontend as a\n",(0,t.jsx)(n.code,{children:"FrontendOpt"}),". In the above example, this will be ",(0,t.jsx)(n.code,{children:"mariner2"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["The response from the frontend will contain an ",(0,t.jsx)(n.code,{children:"llb.State"})," that is\nidentical to the input ",(0,t.jsx)(n.code,{children:"llb.State"})," in every way ",(0,t.jsx)(n.em,{children:"except"})," that the\ndesired artifacts will be signed."]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>c});var t=i(6540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);