"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[620],{160:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=n(4848),s=n(8453);const r={title:"Targets"},a=void 0,o={id:"targets",title:"Targets",description:"This section provides an overview of the targets that Dalec supports. At this time, supported targets are mariner2, azlinux3, and windowscross.",source:"@site/docs/targets.md",sourceDirName:".",slug:"/targets",permalink:"/dalec/targets",draft:!1,unlisted:!1,editUrl:"https://github.com/Azure/dalec/blob/main/website/docs/docs/targets.md",tags:[],version:"current",frontMatter:{title:"Targets"},sidebar:"sidebar",previous:{title:"Sources",permalink:"/dalec/sources"},next:{title:"Testing",permalink:"/dalec/testing"}},l={},d=[{value:"Available Targets",id:"available-targets",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Extensibility",id:"extensibility",level:2}];function c(e){const t={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["This section provides an overview of the targets that Dalec supports. At this time, supported targets are ",(0,i.jsx)(t.code,{children:"mariner2"}),", ",(0,i.jsx)(t.code,{children:"azlinux3"}),", and ",(0,i.jsx)(t.code,{children:"windowscross"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["Many components, such as package dependencies and base images, are specific to a distro or a subset of distros. The dalec spec allows you to move these distro specific things into a ",(0,i.jsx)(t.code,{children:"target"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"available-targets",children:"Available Targets"}),"\n",(0,i.jsx)(t.p,{children:"To print a list of available build targets:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"docker build --print=targets -f test/fixtures/moby-runc.yml .\nTARGET                           DESCRIPTION\nazlinux3/container (default)     Builds a container image for\nazlinux3/container/depsonly      Builds a container image with only the runtime dependencies installed.\nazlinux3/rpm                     Builds an rpm and src.rpm.\nazlinux3/rpm/debug/buildroot     Outputs an rpm buildroot suitable for passing to rpmbuild.\nazlinux3/rpm/debug/sources       Outputs all the sources specified in the spec file in the format given to rpmbuild.\nazlinux3/rpm/debug/spec          Outputs the generated RPM spec file\ndebug/gomods                     Outputs all the gomodule dependencies for the spec\ndebug/resolve                    Outputs the resolved dalec spec file with build args applied.\ndebug/sources                    Outputs all sources from a dalec spec file.\nmariner2/container (default)     Builds a container image for\nmariner2/container/depsonly      Builds a container image with only the runtime dependencies installed.\nmariner2/rpm                     Builds an rpm and src.rpm.\nmariner2/rpm/debug/buildroot     Outputs an rpm buildroot suitable for passing to rpmbuild.\nmariner2/rpm/debug/sources       Outputs all the sources specified in the spec file in the format given to rpmbuild.\nmariner2/rpm/debug/spec          Outputs the generated RPM spec file\nwindowscross/container (default) Builds binaries and installs them into a Windows base image\nwindowscross/zip                 Builds binaries combined into a zip file\n"})}),"\n",(0,i.jsx)(t.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsx)(t.p,{children:"Instead of specifying a package dependency at the root of the spec, you can specify it under a target.\nThis allows you to include different packages for different targets."}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"Please note that dependencies under a target will override dependencies at the root level."})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"targets:\n  mariner2:\n    dependencies:\n      build:\n        - golang\n"})}),"\n",(0,i.jsx)(t.h2,{id:"extensibility",children:"Extensibility"}),"\n",(0,i.jsx)(t.p,{children:"Dalec can\u2019t feasibly support every Linux distribution. Instead, it gives you the flexibility to specify a custom builder image for any target, directing the build process to that specified image."}),"\n",(0,i.jsxs)(t.p,{children:["This method allows for the use of a single spec file for all targets, employing one ",(0,i.jsx)(t.code,{children:"#syntax="})," directive to build the package for any specified target. It also permits the replacement of the default targets with custom builder configurations."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"targets:\n  mariner2:\n    frontend:\n      image: docker.io/my/custom:mariner2\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(6540);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);