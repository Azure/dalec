# syntax=ghcr.io/azure/dalec/frontend:latest

# TODO: The spec is not currently setting the revision in the containerd version
# This should be fixed before this spec is used to build a real package.

args:
  CONTAINERD_COMMIT: 7c3aca7a610df76212171d200ca3811ff6096eb8
  REVISION: 1
  VERSION: "1.7.13"
  HCS_SHIM_REPO: https://github.com/Microsoft/hcsshim.git

name: moby-containerd
description: |
  Industry-standard container runtime
   containerd is an industry-standard container runtime with an emphasis on
   simplicity, robustness and portability. It is available as a daemon for Linux
   and Windows, which can manage the complete container lifecycle of its host
   system: image transfer and storage, container execution and supervision,
   low-level storage and network attachments, etc.
   .
   containerd is designed to be embedded into a larger system, rather than being
   used directly by developers or end-users.
website: https://containerd.io/
version: ${VERSION}
revision: ${REVISION}
vendor: Moby

targets: # Distro specific build requirements
  windows:
    dependencies:
      build:
        golang-1.20:

packager: Microsoft <support@microsoft.com>
license: Apache 2.0
sources:
  containerd:
    git:
      url: https://github.com/containerd/containerd.git
      commit: "${CONTAINERD_COMMIT}"
  hcsshim:
    path: /build/_out
    image:
      ref: mcr.microsoft.com/oss/go/microsoft/golang:1.20
      cmd:
        dir: /build/containerd
        steps:
          - command: |
              apt update && apt install -y jq
              shim_mod_dir="$(
                go mod download -json github.com/Microsoft/hcsshim | jq -r '.Dir'
              )"
              chmod +w -R "$shim_mod_dir"
              mv "$shim_mod_dir"/*  /build/_out
              cd /build/_out
              go mod vendor
        mounts:
          - dest: /build/containerd/go.mod
            spec:
              path: /go.mod
              git:
                url: https://github.com/containerd/containerd.git
                commit: "${CONTAINERD_COMMIT}"


build:
  env:
    CGO_ENABLED: 1
    GOOS: windows
    GOGC: "off"
    GOPROXY: "off"
    GOFLAGS: -trimpath
    VERSION: ${VERSION}
    COMMIT: ${CONTAINERD_COMMIT}
    GOROOT: /usr/lib/go-1.20
    CC: x86_64-w64-mingw32-gcc
  steps:
    - command: |
        set -e
        export PATH="${GOROOT}/bin:${PATH}"
        cd containerd
        make VERSION="$VERSION" REVISION="$COMMIT" DESTDIR=./bin binaries
        rm -f bin/containerd-stress.exe
    - command: |
        set -e
        export PATH="${GOROOT}/bin:${PATH}"
        cd hcsshim
        GO111MODULE=on go build \
          -mod=vendor \
          -o bin/containerd-shim-runhcs-v1.exe \
          ./cmd/containerd-shim-runhcs-v1

artifacts:
  binaries:
    hcsshim/bin/containerd-shim-runhcs-v1.exe:
    containerd/bin/containerd.exe:
    containerd/bin/ctr.exe:
