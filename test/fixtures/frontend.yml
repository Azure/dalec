# syntax=ghcr.io/azure/dalec/frontend:latest

name: dalec-rpm-frontend
description: A test fixture which builds this project as an RPM, mainly to validate generating sources from a command.
website: https://www.github.com/Azure/dalec
version: 0.0.1
revision: 1
vendor: Microsoft

packager: Microsoft <support@microsoft.com>
license: Apache 2.0
sources:
  src:
    context: {}
    generate:
      - gomod: {}
      - cargohome: {}
    inline:
      dir:
        files:
          Cargo.toml:
            contents: |
              [package]
              name = "cargo-test"
              version = "0.1.0"
              edition = "2021"

              [dependencies]
              once_cell = "1.18.0"  # Small crate with no dependencies

              [lib]
              path = "main.rs"
          Cargo.lock:
            contents: |
              # This file is automatically @generated by Cargo.
              # It is not intended for manual editing.
              version = 3

              [[package]]
              name = "cargo-test"
              version = "0.1.0"
              dependencies = [
               "once_cell",
              ]

              [[package]]
              name = "once_cell"
              version = "1.18.0"
              source = "registry+https://github.com/rust-lang/crates.io-index"
              checksum = "dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d"
          main.rs:
            contents: |
              fn main() {
                  use once_cell::sync::Lazy;
                  
                  static GREETING: Lazy<String> = Lazy::new(|| "Hello from Rust with Cargo!".to_string());
                  println!("{}", *GREETING);
              }

dependencies:
  build:
    golang:
    rust:

build:
  env:
    GOPROXY: direct
    CGO_ENABLED: "0"
    GOGC: off
    GOFLAGS: -trimpath
    GOPATH: /go
  steps:
    - command: |
        cd src
        go build -o ../frontend ./cmd/frontend

artifacts:
  binaries:
    frontend: {}

image:
  entrypoint: frontend
