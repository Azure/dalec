name: Retag Images


on:
  schedule:
    - cron: '0 0 * * 0' # Every Sunday at midnight
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/retag/images.yml'
      - '.github/workflows/retag.yml'


permissions:
  contents: read
  packages: write

jobs:
  retag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        name: Checkout
      - uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        name: Login to GHCR
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Update docker
        run: sudo apt update && sudo apt install -y docker-ce
      - name: Setup containerd snapshotter
        run: |
          sudo mkdir -p /etc/docker
          test ! -f /etc/docker/daemon.json && echo '{}' | sudo tee /etc/docker/daemon.json

          tmp="$(mktemp)"
          jq '.features["containerd-snapshotter"] = true' /etc/docker/daemon.json | tee "${tmp}"
          sudo cp "${tmp}" /etc/docker/daemon.json
          jq '.debug = true' /etc/docker/daemon.json | tee "${tmp}"
          sudo cp "${tmp}" /etc/docker/daemon.json
          rm "${tmp}"

          sudo systemctl restart docker
      - name: docker info
        run: docker version; docker info
      - if: ${{ github.event_name == 'pull_request' }}
        name: Setup local registry
        run: |
          set -ex -o pipefail
          docker run -d --rm --name registry -p 5000:5000 ghcr.io/azure/dalec/mirror/dockerhub/library/registry:latest
          echo "RETAG_REGISTRY=localhost:5000" >> $GITHUB_ENV
      - if: ${{ github.event_name != 'pull_request' }}
        name: Setup local registry
        run: |
          set -ex -o pipefail
          repo="ghcr.io/${{ github.repository }}"
          repo="$(tr '[:upper:]' '[:lower:]' <<<"$repo")"
          echo "RETAG_REGISTRY=${repo}" >> $GITHUB_ENV
      - name: Retag images
        run: |

          yq eval '.[] | [.source, .dest ] | @tsv' ./.github/workflows/retag/images.yml | while IFS=$'\t' read -r source dest; do
            dest="${RETAG_REGISTRY}/$dest"
            echo "Retagging $source to $dest"

            platform=""

            if [[ "$source" == *"windows"* ]]; then
              platform="--platform windows/amd64"
            else
              platform="--platform linux/amd64"
            fi

            docker pull ${platform} "$source"
            docker tag "$source" "$dest"

            docker push ${platform} "$dest" || (
              echo "Failed to push $dest"
              img_digest="$(sudo ctr -n moby image list | grep $dest | awk '{ print $3 }')"
              img_index="$(sudo ctr -n moby content get "$img_digest" | jq)"
              jq <<<"$img_index"
              manifest_digest="$(jq -r '.manifests | map(select(.platform.architecture == "amd64")) | first | .digest' <<<"$img_index")"
              sudo ctr -n moby content get "${manifest_digest}" | jq

              exit 42
            )
          done
      - if: failure()
        name: daemon logs
        run: sudo journalctl -u docker
