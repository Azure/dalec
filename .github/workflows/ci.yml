name: ci

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: 
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false
      # Use the golang-ci lint action which automattically sets up GHA caching and other things
      # Note: There is also a "lint" target in docker-bake.hcl for local linting
      # If you make changes to this, please make sure to also update the local linting target
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54
          args: --timeout=30m

  test:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false
      - name: setup builder
        uses: docker/setup-buildx-action@v3
      - name: Expose GitHub tokens for caching
        uses: crazy-max/ghaction-github-runtime@v3
      - name: build frontend tooling
        run: |
          docker buildx bake \
            --set frontend.cache-from=type=gha,scope=dalec.frontend \
            --set frontend.cache-to=type=gha,mode=max,scope=dalec.frontend \
            --set mariner2-toolchain.cache-from=type=gha,scope=dalec.mariner2-toolchain \
            --set frontend.cache-to=type=gha,mode=max,scope=dalec.mariner2-toolchain \
            frontend mariner2-toolchain
      - name: test
        run: |
          docker buildx bake \
            --set frontend.cache-from=type=gha,scope=dalec.test-runc \
            --set frontend.cache-to=type=gha,mode=max,scope=dalec.test-runc \
            test-runc