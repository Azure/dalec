name: ci

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - main
      - release/**
    paths-ignore:
      - 'website/**'
      - 'docs/**'
      - '*.md'
      - 'CODEOWNERS'
      - 'LICENSE'

  push:
    branches:
      - main
      - release/**
    paths-ignore:
      - 'website/**'
      - 'docs/**'
      - '*.md'
      - 'CODEOWNERS'
      - 'LICENSE'

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: '1.22'
          cache: false
      # Use the golang-ci lint action which automattically sets up GHA caching and other things
      # Note: There is also a "lint" target in docker-bake.hcl for local linting
      # If you make changes to this, please make sure to also update the local linting target
      - name: golangci-lint
        uses: golangci/golangci-lint-action@2226d7cb06a077cd73e56eedd38eecad18e5d837 # v6.5.0
        with:
          version: v1.61
          args: --timeout=30m
      - name: validate generated files
        run: |
          go generate || exit $?
          git diff --exit-code
          if [ $? -ne 0 ]; then
            echo "::error::Missing updates to generated files. Please run 'go generate' and commit the changes"
            exit 1
          fi

  integration:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        suite:
          - Mariner2
          - Azlinux3
          - Bookworm
          - Bullseye
          - Bionic
          - Focal
          - Jammy
          - Noble
          - Windows
          - other
        include:
          - suite: other
            skip: Mariner2|Azlinux3|Bookworm|Bullseye|Bionic|Focal|Jammy|Noble|Windows

    # TODO: support diff/merge
    # Right now this is handled by the e2e suite, but we can migrate that here.
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: '1.22'
          cache: false

      - name: Configure dockerd
        run: |
          set -ex -o pipefail

          docker ps -a
          docker images

          sudo mkdir -p /etc/docker
          test ! -f /etc/docker/daemon.json && echo '{}' | sudo tee /etc/docker/daemon.json

          tmp="$(mktemp)"
          jq '.features["containerd-snapshotter"] = true' /etc/docker/daemon.json | tee "${tmp}"
          sudo cp "${tmp}" /etc/docker/daemon.json
          rm "${tmp}"

          sudo systemctl restart docker
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup jaeger
        run: |
          set -e
          docker run -d --net=host --restart=always --name jaeger -e COLLECTOR_OTLP_ENABLED=true jaegertracing/all-in-one:1.62.0
          docker0_ip="$(ip -f inet addr show docker0 | grep -Po 'inet \K[\d.]+')"
          echo "OTEL_EXPORTER_OTLP_ENDPOINT=http://${docker0_ip}:4318" >> "${GITHUB_ENV}"
          echo "OTEL_SERVICE_NAME=dalec-integration-test" >> "${GITHUB_ENV}"

          tmp="$(mktemp)"
          echo "[Service]" > "${tmp}"
          echo "Environment=\"OTEL_EXPORTER_OTLP_ENDPOINT=http://${docker0_ip}:4318\"" >> "${tmp}"

          sudo mkdir -p /etc/systemd/system/docker.service.d
          sudo mkdir -p /etc/systemd/system/containerd.service.d
          sudo cp "${tmp}" /etc/systemd/system/docker.service.d/otlp.conf
          sudo cp "${tmp}" /etc/systemd/system/containerd.service.d/otlp.conf

          sudo systemctl daemon-reload
          sudo systemctl restart containerd
          sudo systemctl restart docker

      - name: download deps
        run: go mod download
      - name: Run integration tests
        run: |
          set -ex
          if [ -n "${TEST_SUITE}" ] && [ ! "${TEST_SUITE}" = "other" ]; then
            run="-run=${TEST_SUITE}"
          fi
          if [ -n "${TEST_SKIP}" ]; then
            skip="-skip=${TEST_SKIP}"
          fi
          go test -timeout=30m -v -json ${run} ${skip} ./test | go run ./cmd/test2json2gha --slow 120s
        env:
          TEST_SUITE: ${{ matrix.suite }}
          TEST_SKIP: ${{ matrix.skip }}
      - name: dump logs
        if: failure()
        run: sudo journalctl -u docker
      - name: Get traces
        if: always()
        run: |
          set -ex
          mkdir -p /tmp/reports
          curl -sSLf localhost:16686/api/traces?service=${OTEL_SERVICE_NAME} > /tmp/reports/jaeger-tests.json
          curl -sSLf localhost:16686/api/traces?service=containerd > /tmp/reports/jaeger-containerd.json
          curl -sSLf localhost:16686/api/traces?service=docker > /tmp/reports/jaeger-docker.json
      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-reports-${{matrix.suite}}
          path: /tmp/reports/*
          retention-days: 1


  unit:
    runs-on: ubuntu-22.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: '1.22'
          cache: false
      - name: download deps
        run: go mod download
      - name: Run unit tests
        run: go test -v --test.short --json ./... | go run ./cmd/test2json2gha

  e2e:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        disable_diff_merge: ["1", "0"]
    name: "Test E2E (disable diff/merge: ${{ matrix.disable_diff_merge }})"
    env:
      DALEC_DISABLE_DIFF_MERGE: ${{ matrix.disable_diff_merge }}
      FRONTEND_REF: localhost:5000/dalec/frontend
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # We need to fetch all commits so that we can diff against the base branch
          fetch-depth: 0
      - name: Expose GitHub tokens for caching
        uses: crazy-max/ghaction-github-runtime@b3a9207c0e1ef41f4cf215303c976869d0c2c1c4 # v3.0.0
      - name: Setup builder
        run: |
          # Sometimes the builder runs out of space... so cleanup anything we can first.
          docker image prune -a -f

          docker run -d --net=host registry

          # If diff/merge are enabled we need to use a buildx builder to make sure the feature is supported.
          # Otherwise we can just use the default docker builder.
          if [ "${DALEC_DISABLE_DIFF_MERGE}" = "0" ]; then
            docker buildx create --use --driver-opt network=host
            echo FRONTEND_BAKE_TARGET="frontend-ci-full" >> $GITHUB_ENV
            echo USE_BUILDX=1 >> $GITHUB_ENV
          else
            echo DALEC_NO_CACHE_EXPORT="1" >> $GITHUB_ENV
            echo DALEC_DISABLE_NESTED="1" >> $GITHUB_ENV
            echo FRONTEND_BAKE_TARGET="frontend-ci" >> $GITHUB_ENV
          fi
      - name: Build frontend image
        run: docker buildx bake ${FRONTEND_BAKE_TARGET}
      - name: test
        run: |
          docker buildx bake test
      - name: Build go-md2man example in docs
        run: |
          version=$(cat docs/examples/go-md2man.yml | yq .version)
          docker build -t go-md2man:$version -f docs/examples/go-md2man.yml --target=mariner2/rpm --output=_output .
          docker build -t go-md2man:$version -f docs/examples/go-md2man.yml --target=mariner2 .
      - name: dump logs
        if: failure()
        run: |
          if [ "${USE_BUILDX}" = "1" ]; then
            docker logs $(docker ps -lq)
          else
            sudo journalctl -u docker
          fi
